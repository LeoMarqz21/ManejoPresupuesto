@model IEnumerable<TipoCuenta>

@{
    ViewData["Title"] = "Tipos cuentas";
}

<h1>Tipos Cuentas</h1>
<h5>
    Se refiere a como agrupar las cuentas. 
    Ejemplo: Prestamos, Efectivo, Tarjetas de credito, etc.
</h5>

<a asp-action="Crear" asp-controller="TiposCuentas" class="btn btn-primary my-3">Crear Tipo Cuenta</a>

<section>
    <table class="table table-hover table-striped">
        <thead class="bg-dark text-white"clas>
            <tr>
                <th>Nombre</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody id="reordenable">
            @foreach(var tipoCuenta in Model)
            {
                <tr>
                    <td>
                        <input type="hidden" value="@tipoCuenta.Id" class="ids" />
                        @tipoCuenta.Nombre
                    </td>
                    <td class="d-flex gap-2">
                        <a 
                            class="btn btn-primary" 
                            asp-action="Editar" 
                            asp-route-id="@tipoCuenta.Id"
                        >Editar</a>
                        <a asp-action="Eliminar" asp-route-id="@tipoCuenta.Id" class="btn btn-danger">Eliminar</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</section>

@section Scripts{
    <script>
        const urlOrdenar = '@Url.Action("ordenar")';

        $(function(){
            $("#reordenable").sortable({
                stop: async function(e, ui)
                {
                    await updateOrders();
                }
            })
        })

        async function updateOrders() {
            const ids = getIdsTBody();
            await sendIdsBackEnd(ids);
        }

        function getIdsTBody() {
            const ids = $(".ids").map(function(){
                return $(this).val();
            }).get();
            return ids;
        }

        async function sendIdsBackEnd(ids)
        {
            let data = JSON.stringify(ids);
            console.log(data);
            await fetch(urlOrdenar, {
                method: 'POST',
                body: data,
                headers: {
                    'Content-Type':'application/json'
                }
            })
        }


    </script>
}
